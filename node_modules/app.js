var express = require('express'),
	bodyParser = require('body-parser'),
	compression = require('compression'),
	config = require('config'),
	cookieParser = require('cookie-parser'),
	csurf = require('csurf'),
	flash = require('express-flash'),
	session = require('express-session'),
	SessionStore = require('session-file-store')(session),
	methodOverride = require('method-override'),
	morgan = require('morgan'),
	passport = require('passport'),
	LocalStrategy = require('passport-local'),
	i18n = require('i18n'),
	swig = require('swig'),
	path = require('path'),
	app = express();

app.config = config;

i18n.configure({
	locales: ['fa', 'en'],
	defaultLocale: 'fa',
	directory: path.join(__dirname, '../locales')
});

require('tools').swigTr(swig, i18n);

app.engine('html', swig.renderFile);
app.set('view engine', 'html');

app.set('views', path.join(__dirname, '../views'));

app.set('view cache', false);

swig.setDefaults({cache: false});

app.use(morgan('dev'));
app.use(compression());
app.use(cookieParser());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: true}));
app.use(session({
	name: 'session.id',
	store: new SessionStore({
		path: path.join(__dirname, '../sessions')
	}),
	secret: 'X)Q#&k3}l`S9|nMuU3 7C7^?,rHX  $?5tlwA]j&l!CQ|B#|2S',
	resave: false,
	saveUninitialized: true
}));
app.use(methodOverride());
app.use(i18n.init);
app.use(flash());
app.use(express.static(path.join(__dirname, '../public')));

module.exports = app;